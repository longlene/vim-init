[[plugins]]
repo = 'Shougo/deoplete.nvim'
depends = 'context_filetype.vim'
on_i = 1
hook_source = '''
let g:deoplete#enable_at_startup = 1
source ~/.vim/init/plugins/deoplete.vim
'''

[[plugins]]
repo = 'Shougo/neocomplete.vim'
on_i = 1
hook_source  = '''
"let g:neocomplete#enable_at_startup = 1
source ~/.vim/init/plugins/neocomplete.vim
'''

[[plugins]]
repo = 'Yggdroot/indentLine'
on_path = '.*'
hook_add = '''
let g:indentLine_faster = 1
let g:indentLine_color_term = 239 "for vim
let g:indentLine_color_gui = '#A4E57E' "for gvim
let g:indentLine_char = 'â”Š'
let g:indentLine_concealcursor = 'niv'
let g:indentLine_fileTypeExclude = ['help', 'man', 'vimfiler']
'''

[[plugins]]
repo = 'bkad/CamelCaseMotion'
on_map = '<Plug>'

[[plugins]]
repo = 'terryma/vim-expand-region'
on_map = {x = '<Plug>'}
hook_add = '''
  xmap v <Plug>(expand_region_expand)
  xmap <C-v> <Plug>(expand_region_shrink)
'''

[[plugins]]
repo = 'rhysd/committia.vim'
on_path = 'COMMIT_EDITMSG'

[[plugins]]
repo = 'Konfekt/FastFold'
on_path = '.*'

[[plugins]]
repo = 'Raimondi/delimitMate'
hook_add = 'let delimitMate_expand_cr = 1'

[[plugins]]
repo = 'tpope/vim-repeat'

[[plugins]]
repo = 'tpope/vim-unimpaired'

[[plugins]]
repo = 'junegunn/vim-easy-align'
hook_add = '''
  xmap ga <Plug>(EasyAlign) " Start interactive EasyAlign in visual mode
  nmap ga <Plug>(EasyAlign) " Start interactive EasyAlign for text object
'''

[[plugins]]
repo = 'rhysd/wandbox-vim'
on_cmd = 'Wandbox'

[[plugins]]
repo = 'osyo-manga/vim-over'

[[plugins]]
repo = 'tmux-plugins/vim-tmux'
on_ft = 'tmux'

[[plugins]]
repo = 'osyo-manga/vital-over'
depends = 'vim-jp/vital.vim'

[[plugins]]
repo = 'tpope/vim-fugitive'

[[plugins]]
repo = 't9md/vim-quickhl'

[[plugins]]
repo = 'terryma/vim-multiple-cursors'

[[plugins]]
repo = 'mattn/calendar-vim'
on_cmd = 'Calendar'

[[plugins]]
repo = 'tpope/vim-dispatch'

[[plugins]]
repo = 'itchyny/vim-cursorword'
on_path = '.*'

[[plugins]]
repo = 'itchyny/vim-highlighturl'
on_path = '.*'

[[plugins]]
repo = 'diepm/vim-rest-console'
on_ft = 'rest'

[[plugins]]
repo = 'chrisbra/NrrwRgn'

[[plugins]]
repo = 'wannesm/wmgraphviz.vim'

[[plugins]]
repo = 'jlanzarotta/bufexplorer'

[[plugins]]
repo = 'AndrewRadev/inline_edit.vim'

[[plugins]]
repo = 'dhruvasagar/vim-table-mode'

[[plugins]]
repo = 'ConradIrwin/vim-bracketed-paste'

[[plugins]]
repo = 'bhurlow/vim-parinfer'

[[plugins]]
repo = 'Shougo/vimproc.vim'
build = 'make'

[[plugins]]
repo = 'Shougo/neoyank.vim'
onO_event = 'TextYankPost'

[[plugins]]
repo = 'Shougo/echodoc.vim'
on_event = 'CompleteDone'
hook_source = 'call echodoc#enable()'

[[plugins]]
repo = 'Shougo/neco-syntax'

[[plugins]]
repo = 'Shougo/neosnippet-snippets'

[[plugins]]
repo = 'Shougo/neosnippet.vim'
depends = ['neosnippet-snippets', 'context_filetype.vim']
on_event = 'InsertCharPre'
on_ft = 'snippet'
hook_source = '''
  let g:neosnippet#enable_snipmate_compatibility = 1
  let g:neosnippet#enable_completed_snippet = 1
  let g:neosnippet#expand_word_boundary = 1
  let g:neosnippet#snippets_directory = '~/.vim/snippets'
  autocmd InitAutoCmd CompleteDone * call neosnippet#complete_done()
'''

[[plugins]]
repo = 'Shougo/denite.nvim'
on_cmd = 'Denite'
hook_source = 'source ~/.vim/init/plugins/denite.vim'
#hook_add = '''
#  nnoremap <silent> ;r
#        \ :<C-u>Denite -buffer-name=register
#        \ register neoyank<CR>
#  xnoremap <silent> ;r
#        \ :<C-u>Denite -default-action=replace -buffer-name=register
#        \ register neoyank<CR>
#  nnoremap <silent> [Window]<Space>
#        \ :<C-u>Denite file/rec:~/.vim/rc<CR>
#  "nnoremap <silent> / :<C-u>Denite -buffer-name=search -auto-highlight
#  "      \ line<CR>
#  nnoremap <silent> * :<C-u>DeniteCursorWord -buffer-name=search
#        \ -auto-highlight -mode=normal line<CR>
#  nnoremap <silent> [Window]s :<C-u>Denite file/point file/old
#        \ -sorters=sorter/rank
#        \ `finddir('.git', ';') != '' ? 'file/rec/git' : 'file/rec'`
#        \ file file:new<CR>
#  nnoremap <silent><expr> tt  &filetype == 'help' ?  "g\<C-]>" :
#        \ ":\<C-u>DeniteCursorWord -buffer-name=tag -immediately
#        \  tag:include\<CR>"
#  nnoremap <silent><expr> tp  &filetype == 'help' ?
#        \ ":\<C-u>pop\<CR>" : ":\<C-u>Denite -mode=normal jump\<CR>"
#  nnoremap <silent> [Window]n :<C-u>Denite dein<CR>
#  nnoremap <silent> [Window]g :<C-u>Denite ghq<CR>
#  nnoremap <silent> ;g :<C-u>Denite -buffer-name=search
#        \ -no-empty -mode=normal grep<CR>
#  "nnoremap <silent> n :<C-u>Denite -buffer-name=search
#  "      \ -resume -mode=normal -refresh<CR>
#  nnoremap <silent> ft :<C-u>Denite filetype<CR>
#  nnoremap <silent> <C-t> :<C-u>Denite
#        \ -select=`tabpagenr()-1` -mode=normal deol:zsh<CR>
#  nnoremap <silent> <C-k> :<C-u>Denite -mode=normal change jump<CR>
#  nnoremap <silent> [Space]gs :<C-u>Denite gitstatus<CR>
#  nnoremap <silent> ;;
#        \ :<C-u>Denite command command_history<CR>
#'''

[[plugins]]
repo = 'Shougo/context_filetype.vim'

[[plugins]]
repo = 'Shougo/unite.vim'
on_cmd = 'Unite'
hook_source = '''
let g:unite_force_overwrite_statusline = 0
let g:unite_data_directory = $CACHE.'/unite'
'''

[[plugins]]
repo = 'equalsraf/neovim-gui-shim'

[[plugins]]
repo = 'Shougo/junkfile.vim'
on_source = 'denite.vim'
hook_add = '''
  nnoremap <silent> [Window]e :<C-u>Denite junkfile:new junkfile<CR>
'''

[[plugins]]
repo = 'Shougo/neco-vim'
on_ft = 'vim'

[[plugins]]
repo = 'Shougo/neoinclude.vim'
on_ft = ['c', 'cpp']

[[plugins]]
repo = 'kana/vim-niceblock'
on_map = {x = '<Plug>'}
hook_add = '''
  xmap I  <Plug>(niceblock-I)
  xmap A  <Plug>(niceblock-A)
'''

[[plugins]]
repo = 'vim-jp/vital.vim'

[[plugins]]
repo = 'ctrlpvim/ctrlp.vim'
on_cmd = ['CtrlP', 'CtrlPMRUFiles', 'CtrlPCurFile', 'CtrlPLine']
hoook_source = '''
let g:ctrlp_cmd = 'CtrlPMRUFiles'
let g:ctrlp_use_caching = 1
let g:ctrlp_clear_cache_on_exit = 0
let g:ctrlp_cache_dir = $CACHE.'/ctrlp'
'''
hook_add = '''
let g:ctrlp_working_path_mode = 'ra'
let g:ctrlp_custom_ignore = '\v[\/]\.(git|hg|svn)$'
if init#is_windows()
  let g:ctrlp_user_command = 'dir %s /-n /b /s /a-d'  " Windows
else
  let g:ctrlp_user_command = 'find %s -type f'        " MacOSX/Linux
endif
nnoremap <silent><C-p> :<C-u>CtrlPMRUFiles<CR>
nnoremap <silent><C-o> :<C-u>CtrlPCurFile<CR>
'''

[[plugins]]
repo = 'thinca/vim-fontzoom'
on_if = "has('gui_running')"
on_map = {n = '<Plug>'}
hook_add = '''
  nmap + <Plug>(fontzoom-larger)
  nmap _ <Plug>(fontzoom-smaller)
'''

[[plugins]]
repo = 'thinca/vim-qfreplace'
on_ft = ['qf']

[[plugins]]
repo = 'thinca/vim-scouter'

[[plugins]]
repo = 'tyru/caw.vim'
on_map = {nx = '<Plug>'}

[[plugins]]
repo = 'tyru/open-browser.vim'

[[plugins]]
repo = 'rhysd/accelerated-jk'
on_map = {n = '<Plug>'}
hook_add = '''
  nmap <silent>j <Plug>(accelerated_jk_gj)
  nmap <silent>k <Plug>(accelerated_jk_gk)
'''

[[plugins]]
repo = 'rhysd/vim-operator-surround'
depends = 'kana/vim-operator-user'
on_map = {n = '<Plug>'}
hook_add = '''
  nmap <silent>sa <Plug>(operator-surround-append)a
  nmap <silent>sd <Plug>(operator-surround-delete)a
  nmap <silent>sr <Plug>(operator-surround-replace)a
  nmap <silent>sc <Plug>(operator-surround-replace)a
'''

[[plugins]]
repo = 'lambdalisue/vim-findent'
on_cmd = ['Findent', 'FindentRestore']

[[plugins]]
repo = 'l04m33/vlime'
rtp = 'vim'

[[plugins]]
repo = 'natebosch/vim-lsc'

[[plugins]]
repo = 'posva/vim-vue'
on_ft = 'vue'

#[[plugins]]
#repo = 'uplus/deoplete-solargraph'
#on_ft = 'ruby'
